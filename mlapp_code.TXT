classdef group_17 < matlab.apps.AppBase

    % Properties that correspond to app components
    properties (Access = public)
        UIFigure                 matlab.ui.Figure
        GridLayout               matlab.ui.container.GridLayout
        LeftPanel                matlab.ui.container.Panel
        omegax109EditFieldLabel  matlab.ui.control.Label
        omegax109EditField       matlab.ui.control.NumericEditField
        nEditFieldLabel          matlab.ui.control.Label
        nEditField               matlab.ui.control.NumericEditField
        bcmEditFieldLabel        matlab.ui.control.Label
        bcmEditField             matlab.ui.control.NumericEditField
        E0EditFieldLabel         matlab.ui.control.Label
        E0EditField              matlab.ui.control.NumericEditField
        epsilon_rEditFieldLabel  matlab.ui.control.Label
        epsilon_rEditField       matlab.ui.control.NumericEditField
        mu_rEditFieldLabel       matlab.ui.control.Label
        mu_rEditField            matlab.ui.control.NumericEditField
        PLOTButton               matlab.ui.control.Button
        RightPanel               matlab.ui.container.Panel
        UIAxes                   matlab.ui.control.UIAxes
        UIAxes2                  matlab.ui.control.UIAxes
    end

    % Properties that correspond to apps with auto-reflow
    properties (Access = private)
        onePanelWidth = 576;
    end

    % Callbacks that handle component events
    methods (Access = private)

        % Button pushed function: PLOTButton
        function PLOTButtonPushed(app, event)
            n=app.nEditField.Value;   % Mode Number
            u_r=app.mu_rEditField.Value;   % Relative Permeability constant
            e_r=app.epsilon_rEditField.Value;   % Relative Permittivity constant
            w=app.omegax109EditField.Value*10.^9;   % Frequency of operation in rad/s  
            u= u_r*(1.25*(10.^(-6)));
            e= e_r*(8.85*(10.^(-12)));
            b=app.bcmEditField.Value;   % Length in cm in y-direction
            f=w/(2*pi);   % Frequency of operation in GHz
            fc = n*100/(2*b*sqrt(u*e));   % Cutoff frequency in GHz
            E0=app.E0EditField.Value;
            An= E0;
            
            y=linspace(0,b,30);
            z=linspace(0,3*b,30);
            [z,y] = meshgrid(z,y);   % Create Mesh grid in z-y
            
            if n == 0
            beta = w*(sqrt(u*e));   % Phase constant
            Ey = An.*sin(beta.*z);
            Ez=0;
            quiver(app.UIAxes,z,y,real(Ez)./Ey,real(Ey)./Ey);
            Hx = -An.*sin(beta.*z);
            Hy=zeros(size(real(Hx)));
            Hz=zeros(size(real(Hx)));
            plot(app.UIAxes2,z(real(Hx)>0),y(real(Hx)>0),'r.');
            hold(app.UIAxes2, 'on')
            plot(app.UIAxes2,z(real(Hx)<0),y(real(Hx)<0),'bx');
            hold(app.UIAxes2, 'off')
            elseif fc>f
            fprintf(['TM_',num2str(n), ' mode cutoff frequency exceeds frequency of operation; hence mode does not porpagate\n']);
            sprintf('The frequency of operation is up to: %0.5g',f)
            sprintf('The cutoff frequency is: %0.5g',fc)
            else
            sprintf('The frequency of operation is up to: %0.5g',f)
            sprintf('The cutoff frequency is: %0.5g',fc)
      
            kc = (n*pi)/b;   % Cut off wave number 
            k= w*(sqrt(u*e));   % Wave number
            Bn= sqrt(k.^2 - kc.^2);   % Phase constant
           
            Hx = (1i*w*e/kc)*An*cos(kc*y)*exp(-1i*Bn.*z);
            Hy=zeros(size(real(Hx)));
            Hz=zeros(size(real(Hx)));
            
            Ex=0;
            Ey = (-1i*Bn./kc)*An.*cos(kc.*y).*exp(-1i*Bn.*z);
            Ez = An.*sin(kc.*y).*exp(-1i*Bn.*z);   
            E=sqrt(real(Ez).^2+real(Ey).^2);

            quiver(app.UIAxes,z,y,real(Ez)./E,real(Ey)./E);
            ax=app.UIAxes;
            ax.Title.String = ['Plot of Side view for TM_',num2str(n),' E-Field'];

            plot(app.UIAxes2,z(real(Hx)>0),y(real(Hx)>0),'r.');
            hold(app.UIAxes2, 'on')
            plot(app.UIAxes2,z(real(Hx)<0),y(real(Hx)<0),'bx');
            hold(app.UIAxes2, 'off')
            ay=app.UIAxes2;
            ay.Title.String = ['Plot of Side view for TM_',num2str(n),' H-Field'];
            end
        end

        % Changes arrangement of the app based on UIFigure width
        function updateAppLayout(app, event)
            currentFigureWidth = app.UIFigure.Position(3);
            if(currentFigureWidth <= app.onePanelWidth)
                % Change to a 2x1 grid
                app.GridLayout.RowHeight = {629, 629};
                app.GridLayout.ColumnWidth = {'1x'};
                app.RightPanel.Layout.Row = 2;
                app.RightPanel.Layout.Column = 1;
            else
                % Change to a 1x2 grid
                app.GridLayout.RowHeight = {'1x'};
                app.GridLayout.ColumnWidth = {220, '1x'};
                app.RightPanel.Layout.Row = 1;
                app.RightPanel.Layout.Column = 2;
            end
        end
    end

    % Component initialization
    methods (Access = private)

        % Create UIFigure and components
        function createComponents(app)

            % Create UIFigure and hide until all components are created
            app.UIFigure = uifigure('Visible', 'off');
            app.UIFigure.AutoResizeChildren = 'off';
            app.UIFigure.Position = [100 100 865 629];
            app.UIFigure.Name = 'MATLAB App';
            app.UIFigure.SizeChangedFcn = createCallbackFcn(app, @updateAppLayout, true);

            % Create GridLayout
            app.GridLayout = uigridlayout(app.UIFigure);
            app.GridLayout.ColumnWidth = {220, '1x'};
            app.GridLayout.RowHeight = {'1x'};
            app.GridLayout.ColumnSpacing = 0;
            app.GridLayout.RowSpacing = 0;
            app.GridLayout.Padding = [0 0 0 0];
            app.GridLayout.Scrollable = 'on';

            % Create LeftPanel
            app.LeftPanel = uipanel(app.GridLayout);
            app.LeftPanel.Layout.Row = 1;
            app.LeftPanel.Layout.Column = 1;

            % Create omegax109EditFieldLabel
            app.omegax109EditFieldLabel = uilabel(app.LeftPanel);
            app.omegax109EditFieldLabel.HorizontalAlignment = 'right';
            app.omegax109EditFieldLabel.Position = [10 535 85 22];
            app.omegax109EditFieldLabel.Text = 'omega (x10^9)';

            % Create omegax109EditField
            app.omegax109EditField = uieditfield(app.LeftPanel, 'numeric');
            app.omegax109EditField.Position = [110 535 100 22];

            % Create nEditFieldLabel
            app.nEditFieldLabel = uilabel(app.LeftPanel);
            app.nEditFieldLabel.HorizontalAlignment = 'right';
            app.nEditFieldLabel.Position = [70 487 25 22];
            app.nEditFieldLabel.Text = 'n';

            % Create nEditField
            app.nEditField = uieditfield(app.LeftPanel, 'numeric');
            app.nEditField.Position = [110 487 100 22];

            % Create bcmEditFieldLabel
            app.bcmEditFieldLabel = uilabel(app.LeftPanel);
            app.bcmEditFieldLabel.HorizontalAlignment = 'right';
            app.bcmEditFieldLabel.Position = [56 436 39 22];
            app.bcmEditFieldLabel.Text = 'b (cm)';

            % Create bcmEditField
            app.bcmEditField = uieditfield(app.LeftPanel, 'numeric');
            app.bcmEditField.Position = [110 436 100 22];

            % Create E0EditFieldLabel
            app.E0EditFieldLabel = uilabel(app.LeftPanel);
            app.E0EditFieldLabel.HorizontalAlignment = 'right';
            app.E0EditFieldLabel.Position = [70 387 25 22];
            app.E0EditFieldLabel.Text = 'E0';

            % Create E0EditField
            app.E0EditField = uieditfield(app.LeftPanel, 'numeric');
            app.E0EditField.Position = [110 387 100 22];

            % Create epsilon_rEditFieldLabel
            app.epsilon_rEditFieldLabel = uilabel(app.LeftPanel);
            app.epsilon_rEditFieldLabel.HorizontalAlignment = 'right';
            app.epsilon_rEditFieldLabel.Position = [41 336 54 22];
            app.epsilon_rEditFieldLabel.Text = 'epsilon_r';

            % Create epsilon_rEditField
            app.epsilon_rEditField = uieditfield(app.LeftPanel, 'numeric');
            app.epsilon_rEditField.Position = [110 336 100 22];

            % Create mu_rEditFieldLabel
            app.mu_rEditFieldLabel = uilabel(app.LeftPanel);
            app.mu_rEditFieldLabel.HorizontalAlignment = 'right';
            app.mu_rEditFieldLabel.Position = [63 287 32 22];
            app.mu_rEditFieldLabel.Text = 'mu_r';

            % Create mu_rEditField
            app.mu_rEditField = uieditfield(app.LeftPanel, 'numeric');
            app.mu_rEditField.Position = [110 287 100 22];

            % Create PLOTButton
            app.PLOTButton = uibutton(app.LeftPanel, 'push');
            app.PLOTButton.ButtonPushedFcn = createCallbackFcn(app, @PLOTButtonPushed, true);
            app.PLOTButton.Position = [60 185 100 22];
            app.PLOTButton.Text = 'PLOT';

            % Create RightPanel
            app.RightPanel = uipanel(app.GridLayout);
            app.RightPanel.Layout.Row = 1;
            app.RightPanel.Layout.Column = 2;

            % Create UIAxes
            app.UIAxes = uiaxes(app.RightPanel);
            title(app.UIAxes, 'TM ')
            xlabel(app.UIAxes, 'Z')
            ylabel(app.UIAxes, 'Y')
            zlabel(app.UIAxes, 'X')
            app.UIAxes.Position = [165 331 350 238];

            % Create UIAxes2
            app.UIAxes2 = uiaxes(app.RightPanel);
            title(app.UIAxes2, 'TM')
            xlabel(app.UIAxes2, 'Z')
            ylabel(app.UIAxes2, 'Y')
            zlabel(app.UIAxes2, 'X')
            app.UIAxes2.Position = [165 54 368 234];

            % Show the figure after all components are created
            app.UIFigure.Visible = 'on';
        end
    end

    % App creation and deletion
    methods (Access = public)

        % Construct app
        function app = group_17

            % Create UIFigure and components
            createComponents(app)

            % Register the app with App Designer
            registerApp(app, app.UIFigure)

            if nargout == 0
                clear app
            end
        end

        % Code that executes before app deletion
        function delete(app)

            % Delete UIFigure when app is deleted
            delete(app.UIFigure)
        end
    end
end